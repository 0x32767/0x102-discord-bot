============
Instructions
============

Arithmetic operations
=====================

00: addition
01: subtraction
02: multiplication
03: division
04: modulo

Raw instructions
================

05: or
06: and
07: not

Memory access
=============

08: allocate
09: unallocated
10: push
11: pop
12: get
13: set

Control flow
============

14: jz

Miscellaneous
=============

16: quit

Memory layout
=============

000 - 454: video buffer
455 - 999: memory

CCL instructions
================

+-----+-----------------------------------+
| add | add                               |
+-----+-----------------------------------+
| sub | subtraction                       |
+-----+-----------------------------------+
| mul | multiplication                    |
+-----+-----------------------------------+
| div | division                          |
+-----+-----------------------------------+
| mod | modulo                            |
+-----+-----------------------------------+
| lor | logical or                        |
+-----+-----------------------------------+
| and | logical and                       |
+-----+-----------------------------------+
| not | logical not                       |
+-----+-----------------------------------+
| alo | memory allocate                   |
+-----+-----------------------------------+
| dal | de allocate                       |
+-----+-----------------------------------+
| put | push to stack                     |
+-----+-----------------------------------+
| pop | pops the stack                    |
+-----+-----------------------------------+
| jez | jump equal zero                   |
+-----+-----------------------------------+
| jnz | jump not zero                     |
+-----+-----------------------------------+
| get | get from memory and push to stack |
+-----+-----------------------------------+
| set | get from stack and push to memory |
+-----+-----------------------------------+
| qut | ends the program                  |
+-----+-----------------------------------+
